# Generated by Django 5.2.4 on 2025-08-03 20:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('passcode', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(help_text='Название Категории')),
            ],
        ),
        migrations.CreateModel(
            name='Anon',
            fields=[
                ('ip', models.GenericIPAddressField(primary_key=True, serialize=False)),
                ('banned', models.BooleanField(default=False)),
                ('passcodes', models.ManyToManyField(to='passcode.passcode')),
            ],
        ),
        migrations.CreateModel(
            name='Board',
            fields=[
                ('code', models.CharField(help_text='Код доски (например, b)', max_length=20, primary_key=True, serialize=False)),
                ('description', models.TextField(help_text='Описание доски, которое видят пользователи в её шапке')),
                ('banner', models.FileField(default=None, help_text='Приветственный баннер', null=True, upload_to='')),
                ('thread_limit', models.IntegerField(default=1000, help_text='Количество тредов, при котором старые начнут удаляться, давая место новым (0 для неограниченного количества)')),
                ('bump_limit', models.IntegerField(default=500, help_text="Бамплимит. При достижении (бамплимит) комментариев в треде он 'утонет' (удалится) (0 для выключения бамплимита)")),
                ('enable_posting', models.BooleanField(default=True, help_text='Если False, разрешает постинг в борде только админам (борда всё ещё будет доступна для просмотра из списка)')),
                ('lockdown', models.BooleanField(default=False, help_text='Карантин. В карантинных бордах НЕЛЬЗЯ создавать или бампать треды.')),
                ('category', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='boards.category')),
            ],
            options={
                'permissions': [('upload_large_files', 'Can upload large files')],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now=True, help_text='Дата и время создания')),
                ('text', models.TextField(help_text='Текст')),
                ('author', models.ForeignKey(help_text='Создатель треда', null=True, on_delete=django.db.models.deletion.SET_NULL, to='boards.anon')),
            ],
        ),
        migrations.CreateModel(
            name='CommentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Файл', null=True, upload_to='', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'webp', 'mp4', 'webm', 'gif'])])),
                ('comment', models.ForeignKey(help_text='Коммент, которому принадлежит файл', null=True, on_delete=django.db.models.deletion.SET_NULL, to='boards.comment')),
            ],
        ),
        migrations.CreateModel(
            name='Thread',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateTimeField(auto_now=True, help_text='Дата и время создания')),
                ('title', models.CharField(default='None', help_text='Заголовок', max_length=64)),
                ('text', models.TextField(help_text='Текст')),
                ('rating', models.IntegerField(default=0, help_text='Рейтинг треда. Он задаётся автоматически, крайне не рекомендуется менять вручную!!!')),
                ('pinned', models.BooleanField(default=False, help_text='Если тред закреплён, он будет отображаться в самом начале списка тредов. Также можно задать из контектного меню треда если вы админ.')),
                ('author', models.ForeignKey(help_text='Создатель треда', null=True, on_delete=django.db.models.deletion.SET_NULL, to='boards.anon')),
                ('board', models.ForeignKey(help_text='Доска треда', null=True, on_delete=django.db.models.deletion.SET_NULL, to='boards.board')),
            ],
            options={
                'permissions': [('create_new_threads', 'Can create new threads'), ('comment_threads', 'Can comment threads')],
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='thread',
            field=models.ForeignKey(help_text='Тред, к которому пишется комментарий', null=True, on_delete=django.db.models.deletion.SET_NULL, to='boards.thread'),
        ),
        migrations.CreateModel(
            name='ThreadFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='Файл', null=True, upload_to='', validators=[django.core.validators.FileExtensionValidator(['png', 'jpg', 'jpeg', 'webp', 'mp4', 'webm', 'gif'])])),
                ('thread', models.ForeignKey(help_text='Тред, которому принадлежит файл', null=True, on_delete=django.db.models.deletion.SET_NULL, to='boards.thread')),
            ],
        ),
    ]
